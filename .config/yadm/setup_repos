#!/usr/bin/env python

from dataclasses import dataclass
from pathlib import Path

import git


@dataclass(frozen=True)
class Repo:
    owner: str
    name: str

    @property
    def ssh(self) -> str:
        return f"git@github.com:{self.owner}/{self.name}.git"

    def clone(self, root: Path) -> bool:
        if not root.is_dir():
            print(f"Creating: {root}")
            root.mkdir(parents=True)
        path = root.joinpath(self.name)
        if not path.is_dir():
            print(f"Cloning {self.ssh} to {path}")
            git.Repo.clone_from(self.ssh, path)
            return True
        else:
            print(f"Pulling: {path}")
            git.Repo(path).remote().pull()
            return False


@dataclass(frozen=True)
class RepoDirectory:
    root: Path
    repos: list[Repo]

    def clone_all(self) -> bool:
        results = [repo.clone(self.root) for repo in self.repos]
        return any(results)


def main() -> None:
    user_name = str(git.GitConfigParser().get_value("user", "name"))
    document_root = Path.home().joinpath("Documents")
    repo_root = Path.home().joinpath("dev/repos")
    open_source_plugins = repo_root.joinpath("open-source/nvim-plugins")
    repo_directories: list[RepoDirectory] = [
        RepoDirectory(
            root=document_root,
            repos=[Repo(owner=user_name, name="notes")],
        ),
        RepoDirectory(
            root=repo_root,
            repos=[
                Repo(owner=user_name, name="advent-of-code"),
                Repo(owner=user_name, name="chess"),
                Repo(owner=user_name, name="dashboard.nvim"),
                Repo(owner=user_name, name="harpoon-core.nvim"),
                Repo(owner=user_name, name="py-requirements.nvim"),
                Repo(owner=user_name, name="full-gradle-app"),
                Repo(owner=user_name, name="learning"),
                Repo(owner=user_name, name="personal-resume"),
                Repo(owner=user_name, name="rx-availability"),
                Repo(owner=user_name, name="small-apps"),
            ],
        ),
        RepoDirectory(
            root=open_source_plugins,
            repos=[
                Repo(owner="nvimdev", name="dashboard-nvim"),
                Repo(owner="ThePrimeagen", name="harpoon"),
                Repo(owner="Saecki", name="crates.nvim"),
            ],
        ),
    ]
    [repo.clone_all() for repo in repo_directories]


if __name__ == "__main__":
    main()
